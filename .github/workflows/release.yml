name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  set-version:
    name: Set tag version
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - name: Get TAG
        id: get_tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

  scan-secrets:
    name: Scan for secrets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run tests
        run: go test -v ./...

  lint:
    name: Run GoLint
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: "Run Linters"
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --verbose

  build-docker:
    needs: [set-version, test, lint, scan-secrets]
    name: Build & Publish Container on Tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set the version for Docker
        id: set_docker_tag
        run: echo TAG=${{ steps.get_tag.outputs.tag }} >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/ihatemodels/alcatraz-rest
          tags: |
            type=semver,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Release build
        id: release_build
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm/v6,linux/arm64
          build-args: |
            VERSION=${{ env.TAG }}
          context: .
          push: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trivy-scan:
    name: Security Scan with Trivy
    needs: [set-version, build-docker]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Trivy vulnerability scanner on repository
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-repo-results.sarif'

      - name: Upload Trivy repository scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-repo-results.sarif'

      - name: Run Trivy vulnerability scanner on Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/ihatemodels/alcatraz-rest:${{ needs.set-version.outputs.tag }}'
          format: 'sarif'
          output: 'trivy-image-results.sarif'

      - name: Upload Trivy image scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-image-results.sarif'

      - name: Run Trivy vulnerability scanner with table output
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/ihatemodels/alcatraz-rest:${{ needs.set-version.outputs.tag }}'
          format: 'table'
        env:
          TRIVY_EXIT_CODE: '1'  # Fail the build if HIGH or CRITICAL vulnerabilities are found

  goreleaser:
    name: Release Binaries
    needs: [set-version, test, lint, scan-secrets, trivy-scan]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set the version for GoReleaser
        id: set_goreleaser_tag
        run: echo TAG=${{ steps.get_tag.outputs.tag }} >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          cache: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
